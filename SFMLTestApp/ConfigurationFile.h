#pragma once

#include "Style.h"
#include "Mutex.h"

#include <iostream>
#include <fstream>

#include <memory>

#include <SFML/System.hpp>

extern const std::string g_configFolder;
extern int _WINDOW_DIM;

//////////////////////////////////////////////////////////////////////////
class ConfigurationFile
{
protected:
	Mutex m_mutex;

	std::vector< std::shared_ptr<Style> > m_style;

	std::string m_filename;

private:

	//////////////////////////////////////////////////////////////////////////
	void addStyle(std::shared_ptr<Style> _style);

	//////////////////////////////////////////////////////////////////////////
	void readFromFile( std::string &_filename);

	//////////////////////////////////////////////////////////////////////////
	void writeOnFile(std::string& _filename);
public:

	void clean();

	//////////////////////////////////////////////////////////////////////////
	void readFromPhotoFile( std::string &_filename);

	//////////////////////////////////////////////////////////////////////////
	ConfigurationFile(std::string const &_filename);

	//////////////////////////////////////////////////////////////////////////
	std::string getFileName();

	//////////////////////////////////////////////////////////////////////////
	~ConfigurationFile();

	//////////////////////////////////////////////////////////////////////////
	static std::shared_ptr<ConfigurationFile> open(std::string const &filename);

	//////////////////////////////////////////////////////////////////////////
	void updateStyle(std::shared_ptr<Style> _style);

	//////////////////////////////////////////////////////////////////////////
	std::shared_ptr<WindowStyle> getWindowStyle();

	//////////////////////////////////////////////////////////////////////////
	bool areThereWindowStyle();

	//////////////////////////////////////////////////////////////////////////
	void updateWindowStyle(Identifier _id, std::shared_ptr<WindowStyle> _style);

	//////////////////////////////////////////////////////////////////////////
	std::shared_ptr<PlayerStyle> getPlayerStyle();

	//////////////////////////////////////////////////////////////////////////
	void updatePlayerStyle(Identifier _id, std::shared_ptr<PlayerStyle> _style);

	//////////////////////////////////////////////////////////////////////////
	int getNumberPlayerStyle();

	//////////////////////////////////////////////////////////////////////////
	std::shared_ptr<TargetStyle> getTargetStyle();

	//////////////////////////////////////////////////////////////////////////
	void updateTargetStyle(Identifier _id, std::shared_ptr<TargetStyle> _style);

	//////////////////////////////////////////////////////////////////////////
	std::shared_ptr<GridStyle> getGridStyle();

	//////////////////////////////////////////////////////////////////////////
	void updateGridStyle(Identifier _id, std::shared_ptr<GridStyle> _style);

	//////////////////////////////////////////////////////////////////////////
	void initSymbols();
};

extern std::shared_ptr<ConfigurationFile> g_configurationFile;
